name: Deploy Node.js App to AWS EC2

on:
  push:
    branches:
      - main  # O workflow será disparado apenas na branch "main"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

           
      # Passo 3: Conectar à EC2 via SSH e executar os comandos
      - name: Deploy to EC2
        env:
          HOST: ec2-18-216-209-153.us-east-2.compute.amazonaws.com  # DNS público da sua EC2
          USER: ubuntu  # Usuário da EC2 (no seu caso é "ubuntu")
          REPO_URL: git@github.com:dnds-davinascimento/backend_coin_marcket.git  # URL do repositório


        run: |
          # Salvar a chave privada (.pem) em um arquivo temporário
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > /tmp/aws_key.pem
          chmod 600 /tmp/aws_key.pem

          # Conectar na instância EC2 via SSH e executar os comandos
          ssh -o StrictHostKeyChecking=no -i /tmp/aws_key.pem $USER@$HOST << 'EOF'
            # Verificar se o Docker está instalado
            if ! command -v docker &> /dev/null
            then
              echo "Docker não encontrado. Instalando..."
              sudo apt-get update
              sudo apt-get install -y docker.io
            else
              echo "Docker já está instalado."
            fi

            # Verificar se o Docker Compose está instalado
            if ! command -v docker-compose &> /dev/null
            then
              echo "Docker Compose não encontrado. Instalando..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose

            else
              echo "Docker Compose já está instalado."
            fi
        
            # Defina o caminho do seu diretório de projeto na EC2
            PROJECT_DIR="/home/ubuntu/backend_coin_marcket"
            REPO_URL="git@github.com:dnds-davinascimento/backend_coin_marcket.git"
            
            if [ ! -d "$PROJECT_DIR" ]; then
                echo "Clonando o repositório..."
                git clone $REPO_URL $PROJECT_DIR
            else
                echo "Diretório já existe, atualizando..."
                cd $PROJECT_DIR
                git pull origin main
            fi


            # Navegar até o diretório do projeto
            cd $PROJECT_DIR || exit

            # Verificar se o arquivo docker-compose.yml existe
            if [ ! -f "docker-compose.yml" ]; then
              echo "Erro: docker-compose.yml não encontrado!"
              exit 1

            fi

            # Parar o container que está rodando
            echo "Parando o container que está rodando..."
            docker-compose down

            # Limpar containers parados, volumes e imagens antigas para liberar espaço
            echo "Limpando containers, volumes e imagens não utilizadas..."
            docker system prune -af --volumes

            # Reiniciar o container da aplicação
            echo "Reiniciando o container da aplicação..."
            docker-compose up -d --build

            # Verificar o status dos containers
            echo "Verificando status dos containers..."
            docker-compose ps

          EOF
